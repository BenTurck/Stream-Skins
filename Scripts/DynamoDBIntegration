//Integrating Amazon DynamoDB

{ 
"Statement": [{

    "Effect": "Allow", //gives permissions for database
    "Action": [
    
    
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
        
      ],
    "Resource": "arn:aws:dynamodb:us-east-2:330789948177:table/User"
  }]
}

var credentials = new CognitoAWSCredentials(Identity, RegionEndpoint.USEast1);  //IDENTITY_POOL_ID
AmazonDynamoDBClient client = new AmazonDynamoDBClient(credentials);
DynamoDBContext Context = new DynamoDBContext(client);

/*
Return Information from table
*/


resultText.text +=("\n*** Retrieving table information ***\n");
       var request = new DescribeTableRequest
       {
           TableName = @"ProductCatalog"
       };
       Client.DescribeTableAsync(request, (result) =>
       {
               if (result.Exception != null)
               {
                       resultText.text += result.Exception.Message;
                       Debug.Log(result.Exception);
                       return;
               }
               var response = result.Response;
               TableDescription description = response.Table;
               resultText.text += ("Name: " + description.TableName + "\n");
               resultText.text += ("Items Within Database: " + description.ItemCount + "\n");
               resultText.text += ("Provision Throughput (reads/sec): " +
                   description.ProvisionedThroughput.ReadCapacityUnits + "\n");
               resultText.text += ("Provision Throughput (reads/sec): " +
                   description.ProvisionedThroughput.WriteCapacityUnits + "\n");

       }, null);
   }
   
/*
  METHOD TO SAVE AN OBJECT
*/

[DynamoDBTable("ProductCatalog")]
    public class newUSER
    {
        [DynamoDBHashKey]   // Hash key.
        public int ID { get; set; }
        [DynamoDBProperty]
        public string Email{ get; set; }
        [DynamoDBProperty]
        public string UserName { get; set; }
        [DynamoDBProperty]
        public string EncryptedPassword { get; set; }
        
    }

private void PerformCreateOperation()
{
    Book myBook = new Book
    {
        ID = UserID,
        EMAIL = "Bob12345@yahoo.com",
        UserName = "Bob12345",
        EncryptedPassword = "!&#*!(BE",
    };

    // Save the user.
    Context.SaveAsync(User,(result)=>{
        if(result.Exception == null)
            resultText.text += @"User Saved";
    });
}








   
   
   
   
